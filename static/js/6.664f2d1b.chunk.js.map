{"version":3,"sources":["components/Card.jsx","components/Footer.jsx","components/SearchBar.jsx","Helpers/index.js","components/HomePage.jsx"],"names":["Card","item","setChosenTitle","useContext","DataContext","className","to","imdbID","onClick","Title","alt","src","Poster","onError","e","target","onerror","Year","Plot","Footer","href","rel","SearchBar","input","setInput","history","useHistory","type","name","value","movieTitle","onChange","prevInput","onKeyDown","event","key","toast","error","preventDefault","push","placeholder","getRandomMovie","rndTopMovies","Math","floor","random","length","HomePage","firstRandomMovieList","setFirstRandomMovieList","useSpring","xys","config","mass","tension","friction","props","set","calc","x","y","window","innerHeight","innerWidth","trans","s","getAPIResults","a","fetch","process","fetchedDataResults","json","res_JSON","Search","useEffect","map","ind","div","class","onMouseMove","clientX","clientY","onMouseLeave","style","transform","interpolate"],"mappings":"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","file":"static/js/6.664f2d1b.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport { DataContext } from \"../context/DataProvider\";\nimport { Link } from \"react-router-dom\";\n\nexport const Card = ({ item }) => {\n  const imgNotAvailable =\n    \"https://res.cloudinary.com/alvison-hunter/image/upload/c_scale,q_auto:low,w_300/v1635741075/movie_not_found_awkmgs.png\";\n  const { setChosenTitle } = useContext(DataContext);\n  return (\n    <div\n      key={item.imdbID}\n      className='transform hover:scale-95 transition duration-500 ease-in-out hover:opacity-75 bg-black min-h-full overflow-hidden w-10/12 cursor-pointer mx-auto rounded'\n    >\n      <Link\n        to={`/movies/${item.imdbID}`}\n        onClick={() => setChosenTitle(item.Title)}\n        className='w-full block h-full'\n      >\n        <img\n          alt={item.Title}\n          src={item.Poster}\n          className='max-h-90 w-full object-cover'\n          onError={(e) => {\n            e.target.onerror = null;\n            e.target.src = `${imgNotAvailable}`;\n          }}\n        />\n        <div className='dark:bg-gray-800 w-full p-4'>\n          <p className='text-green-500 text-md font-medium'>\n            Year: {item.Year}\n          </p>\n          <p className='text-gray-800 dark:text-white text-md font-medium mb-2 movie-title'>\n            {item.Title}\n          </p>\n          <p className='text-gray-400 dark:text-gray-300 font-light text-md'>\n            {item.Plot}\n          </p>\n        </div>\n      </Link>\n    </div>\n  );\n};\n","import React, { Fragment } from \"react\";\nfunction Footer() {\n  return (\n    <Fragment>\n      <footer\n        className='bg-black font-sans\n             text-center\n             sticky\n             inset-x-0\n             bottom-0\n             p-4 flex flex-wrap text-sm border-t-2 border-blue-400'\n      >\n        <p className='flex-auto text-yellow-600'>\n          Made with React using the{\" \"}\n          <a href='https://omdbapi.com/' target='_blank' rel='noreferrer'>\n            OMDB API\n          </a>{\" \"}\n        </p>\n        <p className='flex-auto text-red-500 hover:text-blue-800'>\n          Powered by:\n          <a\n            href='http://www.alvisonhunter.com'\n            rel='noreferrer'\n            target='_blank'\n          >\n            {\" \"}\n            Alvison Hunter\n          </a>\n        </p>\n      </footer>\n    </Fragment>\n  );\n}\n\nexport default Footer;\n","import React, { Fragment, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { DataContext } from \"../context/DataProvider\";\nimport toast from 'react-hot-toast';\nconst notify = () => toast.error('Please type the name of the movie to search.');\n\nfunction SearchBar() {\n  const { input, setInput } = useContext(DataContext);\n  const history = useHistory();\n\n  const handleKeyDown = (event) => {\n    if (event.key === \"Enter\") {\n      if (event.target.value === \"\") {\n        notify();\n        return;\n      }\n      event.preventDefault();\n      history.push(\"/movies\");\n    }\n  };\n\n  const onHandleChange = (e) => {\n    const { name, value } = e.target;\n    setInput((prevInput) => ({\n      ...prevInput,\n      [name]: value,\n    }));\n  };\n  return (\n    <Fragment>\n      <div className='bg-transparent px-10 my-8 flex items-center'>\n    \n        <input\n          type='text'\n          name='movieTitle'\n          className='w-full p-2 h-12'\n          value={input.movieTitle}\n          onChange={onHandleChange}\n          onKeyDown={handleKeyDown}\n          placeholder='Search...'\n        />\n        <Link to='/movies'>\n          <button className='bg-red-600 hover:bg-red-900 text-white p-2 pl-4 pr-4 h-12'>\n            <p className='font-semibold text-xl'>Search</p>\n          </button>\n        </Link>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default SearchBar;\n","  export const getRandomMovie=()=>{ \n    const rndTopMovies = [\n        \"harry potter\",\n        \"star wars\",\n        \"transformers\",\n        \"spider man\",\n        \"Batman\",\n        \"X-Men\",\n        \"shrek\",\n        \"The Mummy\",\n        \"Madea\",\n        \"superman\",\n        \"Ip Man\",\n        \"Rocky\",\n        \"Alien\",\n        \"Teenage Mutant Ninja Turtles\",\n        \"Alvin and the Chipmunks\",\n        \"Men in Black\",\n        \"Ice Age\",\n        \"Pirates of the Caribbean\",\n        \"avengers\",\n        \"Twilight\",\n        \"Lethal Weapon\",\n        \"The Conjuring\",\n        \"Iron Man\",\n        \"Planet of the Apes\",\n        \"mission impossible\",\n        \"Die Hard\",\n        \"fast and furious\",\n        \"Indiana Jones\",\n        \"Despicable Me\",\n        \"Kill Bill\",\n        \"The Chronicles of Narnia\",\n        \"Back to the Future\",\n        \"The Godfather\",\n        \"Dark Knight\",\n        \"Lord Of The Rings\",\n      ];\n      return rndTopMovies[Math.floor(Math.random() * rndTopMovies.length)];\n  }\n\n","import React, { Fragment, useEffect, useContext } from \"react\";\nimport { Card } from \"./Card\";\nimport Footer from \"./Footer\";\nimport SearchBar from \"./SearchBar\";\nimport { getRandomMovie } from \"../Helpers\";\nimport { DataContext } from \"../context/DataProvider\";\nimport { useSpring, animated } from \"react-spring\";\n\nconst HomePage= () => {\n  // using this context property to populate the first movies\n  const { firstRandomMovieList, setFirstRandomMovieList } =\n    useContext(DataContext);\n\n  // React Spring animation to make it work\n  const [props, set] = useSpring(() => ({\n    xys: [0, 0, 1],\n    config: { mass: 5, tension: 150, friction: 40 },\n  }));\n  const calc = (x, y) => [\n    -(y - window.innerHeight / 2) / 40,\n    (x - window.innerWidth / 2) / 40,\n    1.1,\n  ];\n  const trans = (x, y, s) =>\n    `perspective(900px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`;\n\n  // API fetch event to retrieve the data needed on this component\n  const getAPIResults = async () => {\n    const fetchedDataResults = await fetch(\n      `https://www.omdbapi.com/?apikey=${\n        process.env.REACT_APP_API_KEY\n      }&page=1&s=${getRandomMovie()}`\n    );\n    const res_JSON = await fetchedDataResults.json();\n    setFirstRandomMovieList(res_JSON.Search);\n  };\n\n  useEffect(() => {\n    getAPIResults();\n    // eslint-disable-next-line\n  }, []);\n  return (\n    <Fragment>\n      <SearchBar />\n      <div className='grid grid-cols gap-4 md:grid-cols-2 lg:grid-cols-3'>\n        {firstRandomMovieList &&\n          firstRandomMovieList.map((item, ind) => (\n            <animated.div\n              class='card'\n              onMouseMove={({ clientX: x, clientY: y }) =>\n                set({ xys: calc(x, y) })\n              }\n              onMouseLeave={() => set({ xys: [0, 0, 1] })}\n              style={{ transform: props.xys.interpolate(trans) }}\n            >\n              <Card key={ind} item={item} />\n            </animated.div>\n          ))}\n      </div>\n      <Footer />\n    </Fragment>\n  );\n}\n\nexport default HomePage;\n"],"sourceRoot":""}